@page "/collection"

@inject AppStateService StateService
@inject NavigationManager NavManager

<MudGrid>
    <MudItem Class="relative" xs="12" md="12" lg="12">
        <MudText Typo="Typo.h3"><b>Step 2</b> : Data Collection</MudText>
        <div class="pl-1 my-4">
            <MudText Typo="Typo.subtitle1" Class="mud-text-secondary">
                Based on the analysis, please collect following set of data.
            </MudText>
        </div>
    </MudItem>
    <MudItem Class="relative" xs="12" md="12" lg="9">
        <MudExpansionPanels Elevation="8">
            @foreach (var (data, i) in dataCollectionModel.Select((data, i) => (data, i)))
            {
                <MudExpansionPanel Expanded="data.Expanded" Class="@(data.Completed ? "success my-6" : "primary my-6")">
                    <TitleContent>
                        <div class="d-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.List" Class="mr-3"></MudIcon>
                            <MudText Typo="Typo.h6">@data.Name</MudText>
                        </div>
                    </TitleContent>
                    <ChildContent>
                        <MudText Typo="Typo.h6" Class="mt-3">@data.Description</MudText>
                        <MarkdownRenderer MarkDownName="@data.Data" />
                        <MudItem Class="d-flex justify-end mt-4">
                            <MudButton Variant="Variant.Outlined" OnClick="() => CompleteStep(i)">Done</MudButton>
                        </MudItem>
                    </ChildContent>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    </MudItem>
    <MudItem xs="12" md="12" lg="9">
        <div class="d-flex py-4 mb-16 mb-md-0">
            <MudButton Style="height:50px;border-radius:30px" EndIcon="@Icons.Material.Outlined.KeyboardArrowRight" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" OnClick="UploadData">Next Step</MudButton>
        </div>
    </MudItem>
</MudGrid>

@code {
    List<DataCollectionModel> dataCollectionModel = new();

    protected override void OnInitialized()
    {
        var analysisModel = StateService.GetValue<AnalysisModel>(nameof(AnalysisModel));
        dataCollectionModel = analysisModel.DataCollection;
        dataCollectionModel.First().Expanded = true;
    }

    private void UploadData() => NavManager.NavigateTo("upload");

    private void CompleteStep(int index)
    {
        dataCollectionModel[index].Completed = true;
        dataCollectionModel[index].Expanded = false;

        if (index + 1 < dataCollectionModel.Count)
        {
            dataCollectionModel[index + 1].Expanded = true;
        }

        StateHasChanged();
    }
}